var buffer = new ArrayBuffer(253);var uint8 = new Uint8Array(buffer);uint8.set([0,97,115,109,1,0,0,0,1,137,128,128,128,0,2,96,1,127,0,96,0,1,127,2,228,128,128,128,0,6,3,101,110,118,8,83,84,65,67,75,84,79,80,3,127,0,3,101,110,118,9,95,95,90,51,108,111,103,80,99,0,0,3,101,110,118,6,109,101,109,111,114,121,2,1,128,2,128,2,3,101,110,118,5,116,97,98,108,101,1,112,1,0,0,3,101,110,118,10,109,101,109,111,114,121,66,97,115,101,3,127,0,3,101,110,118,9,116,97,98,108,101,66,97,115,101,3,127,0,3,130,128,128,128,0,1,1,6,142,128,128,128,0,2,127,1,35,0,11,125,1,67,0,0,0,0,11,7,139,128,128,128,0,1,7,99,111,117,110,116,101,114,0,1,9,129,128,128,128,0,0,10,176,128,128,128,0,1,170,128,128,128,0,1,4,127,2,127,35,3,33,3,65,128,8,16,0,65,136,8,40,2,0,33,0,32,0,65,1,106,33,1,65,136,8,32,1,54,2,0,32,0,15,11,11,11,140,128,128,128,0,1,0,65,128,8,11,5,99,111,117,110,116,]);// This file will not run on it's own

const {
  Module,
  Instance,
  Memory,
  Table
} = WebAssembly;

let wa;
const make = source => {
  // buffer should already be set
  return wa = new Module(buffer);
};

const WebAssemblyModule = function(deps = {
  'global': {},
  'env': {
    'memory': new Memory({initial: 10, limit: 100}),
    'table': new Table({initial: 0, element: 'anyfunc'})
  }
}) {
  return new Instance(wa || make(), deps);
}

export default WebAssemblyModule;
